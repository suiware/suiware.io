---
import { SITE } from "@/config"

// export interface Props {
//   title?: string;
//   author?: string;
//   profile?: string;
//   description?: string;
//   ogImage?: string;
//   canonicalUrl?: string;
//   pubDatetime?: Date;
//   modDatetime?: Date | null;
//   scrollSmooth?: boolean;
// }

import type { CollectionEntry } from "astro:content"

type Props = CollectionEntry<"blog">["data"]

const {
  title,
  description,
  pubDatetime,
  modDatetime,
  ogImage = SITE.ogImage ? `/${SITE.ogImage}` : "/og.png",
} = Astro.props as Props

const pageUrl = new URL(Astro.url.pathname, Astro.site)

const socialImageURL =
  typeof ogImage === "string" ? new URL(ogImage, Astro.url) : ogImage

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: `${title}`,
  image: `${socialImageURL}`,
  datePublished: `${pubDatetime?.toISOString()}`,
  ...(modDatetime && { dateModified: modDatetime.toISOString() }),
  description,
  url: pageUrl,
  thumbnailUrl: `${socialImageURL}`,
  author: {
    "@type": "Person",
    name: SITE.author,
    url: SITE.profile,
  },
}
---

<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify(structuredData)}
/>
<meta property="og:type" content="article" />
